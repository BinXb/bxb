import{_ as r,c as e,a2 as i,o as l}from"./chunks/framework.Dz7_3PEu.js";const w=JSON.parse('{"title":"绘制事件","description":"","frontmatter":{},"headers":[],"relativePath":"CesiumApis/drawEventApi.md","filePath":"CesiumApis/drawEventApi.md","lastUpdated":null}'),t={name:"CesiumApis/drawEventApi.md"};function o(s,a,d,n,h,p){return l(),e("div",null,a[0]||(a[0]=[i(`<h1 id="绘制事件" tabindex="-1">绘制事件 <a class="header-anchor" href="#绘制事件" aria-label="Permalink to &quot;绘制事件&quot;">​</a></h1><p><code>所有的事件都带一个参数，即回调函数</code></p><h2 id="点-drawpoint" tabindex="-1">点 - drawPoint() <a class="header-anchor" href="#点-drawpoint" aria-label="Permalink to &quot;点 - drawPoint()&quot;">​</a></h2><h2 id="线-drawline" tabindex="-1">线 - drawLine() <a class="header-anchor" href="#线-drawline" aria-label="Permalink to &quot;线 - drawLine()&quot;">​</a></h2><h2 id="面-drawpolygon" tabindex="-1">面 - drawPolygon() <a class="header-anchor" href="#面-drawpolygon" aria-label="Permalink to &quot;面 - drawPolygon()&quot;">​</a></h2><h2 id="圆-drawcircle" tabindex="-1">圆 - drawCircle() <a class="header-anchor" href="#圆-drawcircle" aria-label="Permalink to &quot;圆 - drawCircle()&quot;">​</a></h2><h2 id="围墙-drawwall" tabindex="-1">围墙 - drawWall() <a class="header-anchor" href="#围墙-drawwall" aria-label="Permalink to &quot;围墙 - drawWall()&quot;">​</a></h2><h2 id="多边形-drawpolylinevolume" tabindex="-1">多边形 - drawPolylineVolume() <a class="header-anchor" href="#多边形-drawpolylinevolume" aria-label="Permalink to &quot;多边形 - drawPolylineVolume()&quot;">​</a></h2><h2 id="管道-drawpolygonvolume" tabindex="-1">管道 - drawPolygonVolume() <a class="header-anchor" href="#管道-drawpolygonvolume" aria-label="Permalink to &quot;管道 - drawPolygonVolume()&quot;">​</a></h2><h2 id="盒子-drawbox" tabindex="-1">盒子 - drawBox() <a class="header-anchor" href="#盒子-drawbox" aria-label="Permalink to &quot;盒子 - drawBox()&quot;">​</a></h2><h2 id="球-drawsphere" tabindex="-1">球 - drawSphere() <a class="header-anchor" href="#球-drawsphere" aria-label="Permalink to &quot;球 - drawSphere()&quot;">​</a></h2><h2 id="圆柱-drawcylineder" tabindex="-1">圆柱 - drawCylineder() <a class="header-anchor" href="#圆柱-drawcylineder" aria-label="Permalink to &quot;圆柱 - drawCylineder()&quot;">​</a></h2><h2 id="钳击箭头-drawpincerarrow" tabindex="-1">钳击箭头 - drawPincerArrow() <a class="header-anchor" href="#钳击箭头-drawpincerarrow" aria-label="Permalink to &quot;钳击箭头 - drawPincerArrow()&quot;">​</a></h2><h2 id="防御-进攻阵型-drawformation" tabindex="-1">防御/进攻阵型 - drawFormation() <a class="header-anchor" href="#防御-进攻阵型-drawformation" aria-label="Permalink to &quot;防御/进攻阵型 - drawFormation()&quot;">​</a></h2><h2 id="攻击箭头-drawattackarrow" tabindex="-1">攻击箭头 - drawAttackArrow() <a class="header-anchor" href="#攻击箭头-drawattackarrow" aria-label="Permalink to &quot;攻击箭头 - drawAttackArrow()&quot;">​</a></h2><p>示例：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">globalEarth.Draw.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">drawPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//坐标点信息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div>`,17)]))}const k=r(t,[["render",o]]);export{w as __pageData,k as default};
