import{_ as i,c as a,a2 as n,o as p}from"./chunks/framework.Dz7_3PEu.js";const r=JSON.parse('{"title":"静态对象","description":"","frontmatter":{},"headers":[],"relativePath":"CesiumApis/createObjApi.md","filePath":"CesiumApis/createObjApi.md","lastUpdated":null}'),l={name:"CesiumApis/createObjApi.md"};function t(e,s,o,h,k,d){return p(),a("div",null,s[0]||(s[0]=[n(`<h1 id="静态对象" tabindex="-1">静态对象 <a class="header-anchor" href="#静态对象" aria-label="Permalink to &quot;静态对象&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">提示</p><p>根据绘制事件得到的坐标位置，设置相应参数配置，创建对应实体对象</p><p>最终都返回创建的实体对象</p></div><h2 id="点类型-addpoint" tabindex="-1">点类型 - addPoint <a class="header-anchor" href="#点类型-addpoint" aria-label="Permalink to &quot;点类型 - addPoint&quot;">​</a></h2><p>addPoint(position,config)</p><blockquote><p>position</p><blockquote><p>类型：Object</p><p>说明：笛卡尔坐标点</p></blockquote><p>config</p><blockquote><p>类型：Object</p><p>id:点 ID</p><p>name:点名称</p><p>color:点颜色</p><p>size:点大小</p><p>outlineColor：点边缘颜色</p><p>lineWidth</p></blockquote></blockquote><p>示例：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// position = {&quot;x&quot;:,&quot;y&quot;:,&quot;z&quot;:}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// config = {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   id: &quot;坐标轴专用点&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   color: &quot;#f00&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   size: 15,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   lineWidth: 2,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   outlineColor: &quot;#00f&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">globalEarth.createObj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(position, config);</span></span></code></pre></div><h2 id="线类型-addpolyline" tabindex="-1">线类型 - addPolyline <a class="header-anchor" href="#线类型-addpolyline" aria-label="Permalink to &quot;线类型 - addPolyline&quot;">​</a></h2><p>addPolyline(position,config)</p><blockquote><p>position</p><blockquote><p>类型：Array</p><p>说明：笛卡尔坐标点</p></blockquote><p>config</p><blockquote><p>类型：Object</p><p>id - 线 ID</p><p>name - 线名称</p><p>color - 线颜色</p><p>width - 线宽度</p><p>Alpha - 透明度</p></blockquote></blockquote><p>示例：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// position = [{&quot;x&quot;:,&quot;y&quot;:,&quot;z&quot;:},{...}]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// config = {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   width: 5,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   color: &quot;#FFD700&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   minheight: 20,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   maxheight: 100,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   Alpha: 0.6,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">globalEarth.CreateObj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addPolyline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(position, config);</span></span></code></pre></div><h2 id="面类型-addpolygon" tabindex="-1">面类型 - addPolygon <a class="header-anchor" href="#面类型-addpolygon" aria-label="Permalink to &quot;面类型 - addPolygon&quot;">​</a></h2><p>addPolygon(position,config)</p><p><code>适用对象：普通平面、立体面、钳击箭头、攻击箭头等</code></p><blockquote><p>position</p><blockquote><p>类型：Array</p><p>说明：笛卡尔坐标点</p></blockquote><p>config</p><blockquote><p>类型：Object</p><p>id - 面 ID</p><p>name - 面名称</p><p>height - 离地高度</p><p>extrudedHeight - 厚度</p><p>color - 面颜色</p><p>Alpha - 透明度</p><p>closeTop - 是否封顶（true、false）</p><p>closeBottom - 是否封底（true、false）</p><p>outlineWidth - 边框线宽度</p><p>outline - 是否显示边框线（true、false）</p><p>outlineColor - 边框线颜色</p><p>Gradient - 是否设置渐变色（true、false）</p></blockquote></blockquote><p>示例：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// position = [{&quot;x&quot;:,&quot;y&quot;:,&quot;z&quot;:}]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// config = {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   height: &quot;0&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   extrudedHeight: &quot;0&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   color: &quot;#FFD700&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   Alpha: &quot;0.8&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   closeTop: false,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   closeBottom: true,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   outlineWidth: &quot;&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   outline: false,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   outlineColor: &quot;&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">globalEarth.CreateObj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addPolygon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(position, config);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 如果设置贴地，就不传height和extrudedHeight</span></span></code></pre></div><h2 id="圆类型-addcircle" tabindex="-1">圆类型 - addCircle <a class="header-anchor" href="#圆类型-addcircle" aria-label="Permalink to &quot;圆类型 - addCircle&quot;">​</a></h2><p><code>适用对象：圆、圆柱、圆锥、球体</code></p><p>addCircle(position,config)</p><blockquote><p>position</p><blockquote><p>类型：Object</p><p>说明：笛卡尔坐标点</p></blockquote><p>config</p><blockquote><p>类型：Object</p><p>id</p><p>name - 名称</p><p>color - 颜色（16 进制）</p><p>semiMin - 最小半径</p><p>semiMaj - 最大半径</p><p>outline - 是否显示边框（true、false）</p><p>outlineWidth - 边框宽度</p><p>outlineColor - 边框颜色</p><p>stRotation</p><p>length - 高度</p><p>topRadius - 顶部半径（圆锥）</p><p>bottomRadius - 底部半径（圆锥）</p><p>type - 类型（圆、圆柱、圆锥、球）</p></blockquote></blockquote><p>示例：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// position = {&quot;x&quot;:,&quot;y&quot;:,&quot;z&quot;:}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// config = {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   id: &quot;1769351415-213110-410911-8111412-48159370106907&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   color: &quot;#FFD700&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   semiMin: 21.80347415049127,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   semiMaj: 21.80347415049127,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   outline: true,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   outlineColor: &quot;#c02cd9&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   outlineWidth: &quot;&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   stRotation: &quot;&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   length: &quot;&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   topRadius: &quot;&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   bottomRadius: &quot;&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   type: &quot;圆&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">globalEarth.CreateObj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addCircle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(position, config);</span></span></code></pre></div><h2 id="文字标记类-addtext" tabindex="-1">文字标记类 - addText <a class="header-anchor" href="#文字标记类-addtext" aria-label="Permalink to &quot;文字标记类 - addText&quot;">​</a></h2><p><code>适用对象：文字</code></p><p>addText(position,config)</p><blockquote><p>position</p><blockquote><p>类型：Object</p><p>说明：笛卡尔坐标点</p></blockquote><p>config</p><blockquote><p>id</p><p>color - 颜色</p><p>name - 名称</p><p>text - 文字</p></blockquote></blockquote><p>示例：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// position = {&quot;x&quot;:,&quot;y&quot;:,&quot;z&quot;:}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// config = {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   id: &quot;&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   color: &quot;#FFD700&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   text: &quot;公园&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">globalEarth.CreateObj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(position, config);</span></span></code></pre></div><h2 id="图片标记类-addimg" tabindex="-1">图片标记类 - addImg <a class="header-anchor" href="#图片标记类-addimg" aria-label="Permalink to &quot;图片标记类 - addImg&quot;">​</a></h2><p><code>适用对象：图片</code></p><p>addImg(position,config)</p><blockquote><p>position</p><blockquote><p>类型：Object</p><p>说明：笛卡尔坐标点</p></blockquote><p>config</p><blockquote><p>类型：Object</p><p>url - 图片地址</p><p>height - 高度</p><p>width - 宽度</p><p>rotation - 逆时针旋转度数</p><p>pixelOffset - 偏移量（{x:20,y:0}）</p><p>minShow - 最小显示区间（0）</p><p>maxShow - 最大显示区间（1500）</p></blockquote></blockquote><p>示例：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// position = {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   x: -2707457.783866934,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   y: 4702366.562799605,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   z: 3341087.6697505345,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// };</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// config = {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   url: &quot;...&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   height: &quot;30&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   width: &quot;30&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   rotation: &quot;20&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   pixelOffset: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     x: 10,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     y: 5,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   minShow: &quot;0&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   maxShow: &quot;1500&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">globalEarth.CreateObj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addImg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(position, config);</span></span></code></pre></div><h2 id="管道类-addpolylinevolume" tabindex="-1">管道类 - addPolylineVolume <a class="header-anchor" href="#管道类-addpolylinevolume" aria-label="Permalink to &quot;管道类 - addPolylineVolume&quot;">​</a></h2><p><code>适用对象：管道</code></p><p>addPolylineVolume(config)</p><blockquote><p>config</p><blockquote><p>类型：Object</p><p>positions - 笛卡尔坐标（线集合）</p><p>width - 直径</p><p>Alpha - 透明度</p></blockquote></blockquote><p>示例：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// config = {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   position: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     x: -2707457.783866934,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     y: 4702366.562799605,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     z: 3341087.6697505345,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   Alpha: 0.8,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   width: 5,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">globalEarth.CreateObj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addPolylineVolume</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(config);</span></span></code></pre></div><h2 id="模型类-addnodel" tabindex="-1">模型类 - addNodel <a class="header-anchor" href="#模型类-addnodel" aria-label="Permalink to &quot;模型类 - addNodel&quot;">​</a></h2><p>addModel(position,config)</p><blockquote><p>position</p><blockquote><p>类型：Object</p><p>说明：笛卡尔坐标点</p></blockquote><p>config</p><blockquote><p>类型：Object</p><p>id</p><p>name - 名称</p><p>url - 模型地址</p><p>minShow - 最小显示范围</p><p>maxShow - 最大显示范围</p></blockquote></blockquote><p>示例：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// config = {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   id:&quot;...&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   name:&quot;模型1&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   url:&quot;&quot;,   //模型地址</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   minShow:0,   //最小显示范围</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   maxShow:500,  //最大显示范围</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// position:{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   &quot;x&quot;: -2707457.783866934,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   &quot;y&quot;: 4702366.562799605,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   &quot;z&quot;: 3341087.6697505345</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalEarth.CreateObj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(position,config)</span></span></code></pre></div>`,47)]))}const u=i(l,[["render",t]]);export{r as __pageData,u as default};
